/* Enclave.edl - Top EDL file. */

enclave {
    
    include "user_types.h" /* buffer_t */
    include "sgx_eid.h"
    from "sgx_tstdc.edl" import sgx_thread_wait_untrusted_event_ocall, sgx_thread_set_untrusted_event_ocall, sgx_thread_setwait_untrusted_events_ocall, sgx_thread_set_multiple_untrusted_events_ocall;

    /* Import ECALL/OCALL from sub-directory EDLs.
     *  [from]: specifies the location of EDL file. 
     *  [import]: specifies the functions to import, 
     *  [*]: implies to import all functions.
     */
    
    from "TrustedLibrary/Thread.edl" import *;
    from "Thread/Pthread.edl" import *;
    from "SysEnvironment/sgx_time.edl" import *;
    
    from "SysEnvironment/sgx_pwd.edl" import *;
    from "SysEnvironment/sgx_grp.edl" import *;
    from "SysEnvironment/sgx_utsname.edl" import *;
    from "IO/sgx_stdlib.edl" import *;
    from "IO/sgx_fcntl.edl" import *;
    from "IO/sgx_unistd.edl" import *;
    from "IO/sgx_stdio.edl" import *;
    from "IO/sgx_syseventfd.edl" import *;
    from "IO/sgx_syssocket.edl" import *;
    from "IO/sgx_netdb.edl" import *;
    from "IO/sgx_netinetin.edl" import *;
    from "IO/sgx_sysioctl.edl" import *;
    from "IO/sgx_sysuio.edl" import *;
    from "IO/sgx_sysmman.edl" import *;
    from "IO/sgx_poll.edl" import *;
    from "IO/sgx_sysepoll.edl" import *;
    from "IO/sgx_sysselect.edl" import *;
    from "IO/sgx_syssendfile.edl" import *;
    from "IO/sgx_syswait.edl" import *;
    from "IO/sgx_sysstat.edl" import *;
    from "IO/sgx_dirent.edl" import *;
    from "IO/sgx_sysresource.edl" import *;
    from "IO/sgx_arpainet.edl" import *;
    from "IO/sgx_sysctl.edl" import *;
    from "IO/sgx_signal.edl" import *;
    //from "ssl.edl" import *;
    from "Net/sgx_ifaddrs.edl" import *;
    from "Net/sgx_netif.edl" import *;
    from "LocalAttestationCode/LocalAttestationCode.edl" import *;

    trusted {
        public void ecall_set_communication_enclave_ids(sgx_enclave_id_t tds_id, sgx_enclave_id_t vrfcert_id);
        
        public void ecall_get_block([in, string]char* hexBlock);
        public void ecall_gen_new_pubkey();
    };  
};
